## usage delphi(proj,iter)
## example:  delphi("mTBI",1)
## where x is the project name
## iter is the iteration number

delphi <- function(proj,iter){
    UseMethod("delphi")
}

# the following function retrieves the data from the local host.  I
# need to make sure it agrees with the data structure from the
# database.

Get.Data <- function(proj,iter){
  library(RMySQL)
  drv <- dbDriver("MySQL")
  con <- dbConnect(drv, user="delphi",password="delphi-user",host="localhost",dbname="delphi")
  proj.table <- paste(x,"responses",sep=".")
  # need to include question number, question type, agreement tolerance in the sql statement below
  sql <- paste("SELECT * FROM project_items_by_user WHERE iter =",iter,"AND project_id =",proj)
  res <- dbSendQuery(con, statement=sql)
  dat <- fetch(res)
  return(dat)
}

# the following function uses the data from the database to compute
# agreement.

delphi.default <- function(x,iter){
  library(irr)
  dat <- Get.Data(x,iter)
  # dat should include question number, question type, agreement tolerance, rater, and rater responses
  quests <- unique(dat$question)
  
  out <- rep(NA,length(quests))
  for (i in 1:length(quests)){
    tmp <- dat[dat$question == quests[i],]
    # process the agreement method based upon the question types

    if (quests[i] == 1){
      out[i] <- sd(tmp$rating)/sqrt(nrow(tmp)) # continuous data qtype=1
    }
    if (quests[i] == 2){
      out[i] <- 1 - (mean(tmp$rating)*(1-mean(tmp$rating))/.5) # binary data qtype=2
    }
    if (quests[i] == 3){
      out[i] <- 1 - chisq.test(tmp$rating)$p.value # categorical values qtype=3
    }
    # create graph here
  }
  out <- round(out,2)
  return(out)
}


# upload data back to the database

Post.Data <- function(x){
  #TBD
}


# create some bogus data for 3 questions and 5 raters

dat <- data.frame(proj=rep("test",15),iter=rep(1,15),question=c(rep(1,5),rep(2,5),rep(3,5)),qtype=c(rep(1,5),rep(2,5),rep(3,5)),rater=rep(1:5,3),rating=c(rnorm(5),rbinom(5,2,.2),1:5))
